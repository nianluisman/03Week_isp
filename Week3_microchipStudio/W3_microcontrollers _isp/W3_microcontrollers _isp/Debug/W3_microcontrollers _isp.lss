
W3_microcontrollers _isp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000080a  0000089e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000080a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800106  00800106  000008a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000904  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000717  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000038f  00000000  00000000  000019b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ec  00000000  00000000  00001d44  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000044a  00000000  00000000  00001e30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000027e  00000000  00000000  0000227a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__vector_17>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e0       	ldi	r30, 0x0A	; 10
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 31       	cpi	r26, 0x13	; 19
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <main>
  9e:	0c 94 03 04 	jmp	0x806	; 0x806 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <appendSerial>:
	UCSR0B = (1 << TXEN0) |  (1 << TXCIE0) | (1 << RXEN0) | (1 << RXCIE0); // Here, you enable the TX and the RX for the USART communication. Also, you enable the interrupt generated by a complete conversion of your RX. Also enable TX with her specified interrupt.
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00); // Here, you are using 8-bits data (the 'UCSZ00' bit), and in total 2 stop bits (the 'USBS0' bit).
	
}
 void appendSerial(char c){//read out string one char at the time
	 serialbufffer[serialWritePos] = c;
  a6:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <__data_end>
  aa:	e9 2f       	mov	r30, r25
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	e7 5f       	subi	r30, 0xF7	; 247
  b0:	fe 4f       	sbci	r31, 0xFE	; 254
  b2:	80 83       	st	Z, r24
	 serialWritePos++;
  b4:	9f 5f       	subi	r25, 0xFF	; 255
  b6:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <__data_end>
	 
	 if(serialWritePos >= UART_BUFF_SIZE){
  ba:	9a 30       	cpi	r25, 0x0A	; 10
  bc:	10 f0       	brcs	.+4      	; 0xc2 <appendSerial+0x1c>
		 serialWritePos = 0;
  be:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
  c2:	08 95       	ret

000000c4 <serialWrite>:
	 }
 }
void serialWrite(char c[]){ //get string in to buffer
  c4:	1f 93       	push	r17
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	ec 01       	movw	r28, r24
	for(uint8_t i = 0; i < strlen(c); i++){
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	07 c0       	rjmp	.+14     	; 0xde <serialWrite+0x1a>
		appendSerial(c[i]);
  d0:	fe 01       	movw	r30, r28
  d2:	e8 0f       	add	r30, r24
  d4:	f9 1f       	adc	r31, r25
  d6:	80 81       	ld	r24, Z
  d8:	0e 94 53 00 	call	0xa6	; 0xa6 <appendSerial>
	 if(serialWritePos >= UART_BUFF_SIZE){
		 serialWritePos = 0;
	 }
 }
void serialWrite(char c[]){ //get string in to buffer
	for(uint8_t i = 0; i < strlen(c); i++){
  dc:	1f 5f       	subi	r17, 0xFF	; 255
  de:	81 2f       	mov	r24, r17
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	fe 01       	movw	r30, r28
  e4:	01 90       	ld	r0, Z+
  e6:	00 20       	and	r0, r0
  e8:	e9 f7       	brne	.-6      	; 0xe4 <serialWrite+0x20>
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	ec 1b       	sub	r30, r28
  ee:	fd 0b       	sbc	r31, r29
  f0:	8e 17       	cp	r24, r30
  f2:	9f 07       	cpc	r25, r31
  f4:	68 f3       	brcs	.-38     	; 0xd0 <serialWrite+0xc>
		appendSerial(c[i]);
	}
	if(UCSR0A & (1 << UDRE0)){
  f6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  fa:	85 fd       	sbrc	r24, 5
		UDR0 = 0;
  fc:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	}
}
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	1f 91       	pop	r17
 106:	08 95       	ret

00000108 <__vector_17>:

ISR(SPI_STC_vect){
 108:	1f 92       	push	r1
 10a:	0f 92       	push	r0
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	0f 92       	push	r0
 110:	11 24       	eor	r1, r1
 112:	8f 93       	push	r24
	if(SPSR & 0x40){
 114:	0d b4       	in	r0, 0x2d	; 45
 116:	06 fe       	sbrs	r0, 6
 118:	09 c0       	rjmp	.+18     	; 0x12c <__vector_17+0x24>
		spi_rx_data = SPDR;
 11a:	8e b5       	in	r24, 0x2e	; 46
 11c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <spi_rx_data>
		spi_rx_data = 0;
 120:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <spi_rx_data>
		spi_txrx_done = 1;
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <spi_txrx_done>
 12a:	06 c0       	rjmp	.+12     	; 0x138 <__vector_17+0x30>
	}else{
		spi_rx_data = SPDR;
 12c:	8e b5       	in	r24, 0x2e	; 46
 12e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <spi_rx_data>
		spi_txrx_done = 1; 
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <spi_txrx_done>
	
       }
}
 138:	8f 91       	pop	r24
 13a:	0f 90       	pop	r0
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	0f 90       	pop	r0
 140:	1f 90       	pop	r1
 142:	18 95       	reti

00000144 <spi_int>:
void spi_int(void){
	DDRB |= (1 << DDB5) | (1 << DDB3) | (1 << DDB2);
 144:	84 b1       	in	r24, 0x04	; 4
 146:	8c 62       	ori	r24, 0x2C	; 44
 148:	84 b9       	out	0x04, r24	; 4
	PORTB |= 1 << PORTB2; //pull up resistor enbaled 
 14a:	85 b1       	in	r24, 0x05	; 5
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	85 b9       	out	0x05, r24	; 5
	
	SPCR = (1 << SPIE) | (1 << SPE) | (1 << CPOL) << (0 << CPHA) | (0b11 << SPR0);
 150:	8b ec       	ldi	r24, 0xCB	; 203
 152:	8c bd       	out	0x2c, r24	; 44
 154:	08 95       	ret

00000156 <spi_sent>:
}

void spi_sent(uint8_t *tx, uint8_t *rx){
	spi_txrx_done = 0;
 156:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <spi_txrx_done>
	SPDR = tx;
 15a:	8e bd       	out	0x2e, r24	; 46
	while(spi_txrx_done != 0);
 15c:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <spi_txrx_done>
 160:	81 11       	cpse	r24, r1
 162:	fc cf       	rjmp	.-8      	; 0x15c <spi_sent+0x6>
	*rx = spi_rx_data;	
 164:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <spi_rx_data>
 168:	fb 01       	movw	r30, r22
 16a:	80 83       	st	Z, r24
 16c:	08 95       	ret

0000016e <spi_transfer>:
}

void  spi_transfer(uint8_t *tx, uint8_t *rx, uint16_t len ){
 16e:	cf 92       	push	r12
 170:	df 92       	push	r13
 172:	ef 92       	push	r14
 174:	ff 92       	push	r15
 176:	0f 93       	push	r16
 178:	1f 93       	push	r17
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	6c 01       	movw	r12, r24
 180:	7b 01       	movw	r14, r22
 182:	8a 01       	movw	r16, r20
	PORTB &= ~(1 << PORTB2); 
 184:	85 b1       	in	r24, 0x05	; 5
 186:	8b 7f       	andi	r24, 0xFB	; 251
 188:	85 b9       	out	0x05, r24	; 5
	//_delay_ms(100);
	for(uint16_t i =0; i < len; i++){
 18a:	c0 e0       	ldi	r28, 0x00	; 0
 18c:	d0 e0       	ldi	r29, 0x00	; 0
 18e:	09 c0       	rjmp	.+18     	; 0x1a2 <spi_transfer+0x34>
		spi_sent(&tx[i], &rx[i]);
 190:	b7 01       	movw	r22, r14
 192:	6c 0f       	add	r22, r28
 194:	7d 1f       	adc	r23, r29
 196:	c6 01       	movw	r24, r12
 198:	8c 0f       	add	r24, r28
 19a:	9d 1f       	adc	r25, r29
 19c:	0e 94 ab 00 	call	0x156	; 0x156 <spi_sent>
}

void  spi_transfer(uint8_t *tx, uint8_t *rx, uint16_t len ){
	PORTB &= ~(1 << PORTB2); 
	//_delay_ms(100);
	for(uint16_t i =0; i < len; i++){
 1a0:	21 96       	adiw	r28, 0x01	; 1
 1a2:	c0 17       	cp	r28, r16
 1a4:	d1 07       	cpc	r29, r17
 1a6:	a0 f3       	brcs	.-24     	; 0x190 <spi_transfer+0x22>
		spi_sent(&tx[i], &rx[i]);
	}
	PORTB |= (1 << PORTB2);
 1a8:	85 b1       	in	r24, 0x05	; 5
 1aa:	84 60       	ori	r24, 0x04	; 4
 1ac:	85 b9       	out	0x05, r24	; 5
	//_delay_ms(100);
}
 1ae:	df 91       	pop	r29
 1b0:	cf 91       	pop	r28
 1b2:	1f 91       	pop	r17
 1b4:	0f 91       	pop	r16
 1b6:	ff 90       	pop	r15
 1b8:	ef 90       	pop	r14
 1ba:	df 90       	pop	r13
 1bc:	cf 90       	pop	r12
 1be:	08 95       	ret

000001c0 <main>:
int main(void)
{
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	00 d0       	rcall	.+0      	; 0x1c6 <main+0x6>
 1c6:	cd b7       	in	r28, 0x3d	; 61
 1c8:	de b7       	in	r29, 0x3e	; 62
	spi_int();
 1ca:	0e 94 a2 00 	call	0x144	; 0x144 <spi_int>
	uint8_t tx_data = 0;
 1ce:	19 82       	std	Y+1, r1	; 0x01
	uint8_t rx_data = 0; 
 1d0:	1a 82       	std	Y+2, r1	; 0x02
	
	sei();
 1d2:	78 94       	sei

    while (1) 
    {
		tx_data++;
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	89 83       	std	Y+1, r24	; 0x01
		spi_transfer(&tx_data,&rx_data, 1);
 1da:	41 e0       	ldi	r20, 0x01	; 1
 1dc:	50 e0       	ldi	r21, 0x00	; 0
 1de:	be 01       	movw	r22, r28
 1e0:	6e 5f       	subi	r22, 0xFE	; 254
 1e2:	7f 4f       	sbci	r23, 0xFF	; 255
 1e4:	ce 01       	movw	r24, r28
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	0e 94 b7 00 	call	0x16e	; 0x16e <spi_transfer>
		if(tx_data >= 255){
 1ec:	89 81       	ldd	r24, Y+1	; 0x01
 1ee:	8f 3f       	cpi	r24, 0xFF	; 255
 1f0:	09 f4       	brne	.+2      	; 0x1f4 <main+0x34>
			tx_data =0; 
 1f2:	19 82       	std	Y+1, r1	; 0x01
		}
	memset(serialbufffer,0,sizeof(serialbufffer));
 1f4:	e9 e0       	ldi	r30, 0x09	; 9
 1f6:	f1 e0       	ldi	r31, 0x01	; 1
 1f8:	8a e0       	ldi	r24, 0x0A	; 10
 1fa:	df 01       	movw	r26, r30
 1fc:	1d 92       	st	X+, r1
 1fe:	8a 95       	dec	r24
 200:	e9 f7       	brne	.-6      	; 0x1fc <main+0x3c>
	sprintf(serialbufffer, "%c %d", rx_data, tx_data);
 202:	89 81       	ldd	r24, Y+1	; 0x01
 204:	1f 92       	push	r1
 206:	8f 93       	push	r24
 208:	8a 81       	ldd	r24, Y+2	; 0x02
 20a:	1f 92       	push	r1
 20c:	8f 93       	push	r24
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	9f 93       	push	r25
 214:	8f 93       	push	r24
 216:	ff 93       	push	r31
 218:	ef 93       	push	r30
 21a:	0e 94 19 01 	call	0x232	; 0x232 <sprintf>
	serialWrite(serialbufffer);
 21e:	89 e0       	ldi	r24, 0x09	; 9
 220:	91 e0       	ldi	r25, 0x01	; 1
 222:	0e 94 62 00 	call	0xc4	; 0xc4 <serialWrite>
	
	}
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	f8 94       	cli
 22a:	de bf       	out	0x3e, r29	; 62
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	cd bf       	out	0x3d, r28	; 61
 230:	d1 cf       	rjmp	.-94     	; 0x1d4 <main+0x14>

00000232 <sprintf>:
 232:	ae e0       	ldi	r26, 0x0E	; 14
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	ef e1       	ldi	r30, 0x1F	; 31
 238:	f1 e0       	ldi	r31, 0x01	; 1
 23a:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__prologue_saves__+0x1c>
 23e:	0d 89       	ldd	r16, Y+21	; 0x15
 240:	1e 89       	ldd	r17, Y+22	; 0x16
 242:	86 e0       	ldi	r24, 0x06	; 6
 244:	8c 83       	std	Y+4, r24	; 0x04
 246:	1a 83       	std	Y+2, r17	; 0x02
 248:	09 83       	std	Y+1, r16	; 0x01
 24a:	8f ef       	ldi	r24, 0xFF	; 255
 24c:	9f e7       	ldi	r25, 0x7F	; 127
 24e:	9e 83       	std	Y+6, r25	; 0x06
 250:	8d 83       	std	Y+5, r24	; 0x05
 252:	ae 01       	movw	r20, r28
 254:	47 5e       	subi	r20, 0xE7	; 231
 256:	5f 4f       	sbci	r21, 0xFF	; 255
 258:	6f 89       	ldd	r22, Y+23	; 0x17
 25a:	78 8d       	ldd	r23, Y+24	; 0x18
 25c:	ce 01       	movw	r24, r28
 25e:	01 96       	adiw	r24, 0x01	; 1
 260:	0e 94 3b 01 	call	0x276	; 0x276 <vfprintf>
 264:	ef 81       	ldd	r30, Y+7	; 0x07
 266:	f8 85       	ldd	r31, Y+8	; 0x08
 268:	e0 0f       	add	r30, r16
 26a:	f1 1f       	adc	r31, r17
 26c:	10 82       	st	Z, r1
 26e:	2e 96       	adiw	r28, 0x0e	; 14
 270:	e4 e0       	ldi	r30, 0x04	; 4
 272:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__epilogue_restores__+0x1c>

00000276 <vfprintf>:
 276:	ab e0       	ldi	r26, 0x0B	; 11
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e1 e4       	ldi	r30, 0x41	; 65
 27c:	f1 e0       	ldi	r31, 0x01	; 1
 27e:	0c 94 cc 03 	jmp	0x798	; 0x798 <__prologue_saves__>
 282:	6c 01       	movw	r12, r24
 284:	7b 01       	movw	r14, r22
 286:	8a 01       	movw	r16, r20
 288:	fc 01       	movw	r30, r24
 28a:	17 82       	std	Z+7, r1	; 0x07
 28c:	16 82       	std	Z+6, r1	; 0x06
 28e:	83 81       	ldd	r24, Z+3	; 0x03
 290:	81 ff       	sbrs	r24, 1
 292:	cc c1       	rjmp	.+920    	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	3c 01       	movw	r6, r24
 29a:	f6 01       	movw	r30, r12
 29c:	93 81       	ldd	r25, Z+3	; 0x03
 29e:	f7 01       	movw	r30, r14
 2a0:	93 fd       	sbrc	r25, 3
 2a2:	85 91       	lpm	r24, Z+
 2a4:	93 ff       	sbrs	r25, 3
 2a6:	81 91       	ld	r24, Z+
 2a8:	7f 01       	movw	r14, r30
 2aa:	88 23       	and	r24, r24
 2ac:	09 f4       	brne	.+2      	; 0x2b0 <vfprintf+0x3a>
 2ae:	ba c1       	rjmp	.+884    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	39 f4       	brne	.+14     	; 0x2c2 <vfprintf+0x4c>
 2b4:	93 fd       	sbrc	r25, 3
 2b6:	85 91       	lpm	r24, Z+
 2b8:	93 ff       	sbrs	r25, 3
 2ba:	81 91       	ld	r24, Z+
 2bc:	7f 01       	movw	r14, r30
 2be:	85 32       	cpi	r24, 0x25	; 37
 2c0:	29 f4       	brne	.+10     	; 0x2cc <vfprintf+0x56>
 2c2:	b6 01       	movw	r22, r12
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 2ca:	e7 cf       	rjmp	.-50     	; 0x29a <vfprintf+0x24>
 2cc:	91 2c       	mov	r9, r1
 2ce:	21 2c       	mov	r2, r1
 2d0:	31 2c       	mov	r3, r1
 2d2:	ff e1       	ldi	r31, 0x1F	; 31
 2d4:	f3 15       	cp	r31, r3
 2d6:	d8 f0       	brcs	.+54     	; 0x30e <vfprintf+0x98>
 2d8:	8b 32       	cpi	r24, 0x2B	; 43
 2da:	79 f0       	breq	.+30     	; 0x2fa <vfprintf+0x84>
 2dc:	38 f4       	brcc	.+14     	; 0x2ec <vfprintf+0x76>
 2de:	80 32       	cpi	r24, 0x20	; 32
 2e0:	79 f0       	breq	.+30     	; 0x300 <vfprintf+0x8a>
 2e2:	83 32       	cpi	r24, 0x23	; 35
 2e4:	a1 f4       	brne	.+40     	; 0x30e <vfprintf+0x98>
 2e6:	23 2d       	mov	r18, r3
 2e8:	20 61       	ori	r18, 0x10	; 16
 2ea:	1d c0       	rjmp	.+58     	; 0x326 <vfprintf+0xb0>
 2ec:	8d 32       	cpi	r24, 0x2D	; 45
 2ee:	61 f0       	breq	.+24     	; 0x308 <vfprintf+0x92>
 2f0:	80 33       	cpi	r24, 0x30	; 48
 2f2:	69 f4       	brne	.+26     	; 0x30e <vfprintf+0x98>
 2f4:	23 2d       	mov	r18, r3
 2f6:	21 60       	ori	r18, 0x01	; 1
 2f8:	16 c0       	rjmp	.+44     	; 0x326 <vfprintf+0xb0>
 2fa:	83 2d       	mov	r24, r3
 2fc:	82 60       	ori	r24, 0x02	; 2
 2fe:	38 2e       	mov	r3, r24
 300:	e3 2d       	mov	r30, r3
 302:	e4 60       	ori	r30, 0x04	; 4
 304:	3e 2e       	mov	r3, r30
 306:	2a c0       	rjmp	.+84     	; 0x35c <vfprintf+0xe6>
 308:	f3 2d       	mov	r31, r3
 30a:	f8 60       	ori	r31, 0x08	; 8
 30c:	1d c0       	rjmp	.+58     	; 0x348 <vfprintf+0xd2>
 30e:	37 fc       	sbrc	r3, 7
 310:	2d c0       	rjmp	.+90     	; 0x36c <vfprintf+0xf6>
 312:	20 ed       	ldi	r18, 0xD0	; 208
 314:	28 0f       	add	r18, r24
 316:	2a 30       	cpi	r18, 0x0A	; 10
 318:	40 f0       	brcs	.+16     	; 0x32a <vfprintf+0xb4>
 31a:	8e 32       	cpi	r24, 0x2E	; 46
 31c:	b9 f4       	brne	.+46     	; 0x34c <vfprintf+0xd6>
 31e:	36 fc       	sbrc	r3, 6
 320:	81 c1       	rjmp	.+770    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 322:	23 2d       	mov	r18, r3
 324:	20 64       	ori	r18, 0x40	; 64
 326:	32 2e       	mov	r3, r18
 328:	19 c0       	rjmp	.+50     	; 0x35c <vfprintf+0xe6>
 32a:	36 fe       	sbrs	r3, 6
 32c:	06 c0       	rjmp	.+12     	; 0x33a <vfprintf+0xc4>
 32e:	8a e0       	ldi	r24, 0x0A	; 10
 330:	98 9e       	mul	r9, r24
 332:	20 0d       	add	r18, r0
 334:	11 24       	eor	r1, r1
 336:	92 2e       	mov	r9, r18
 338:	11 c0       	rjmp	.+34     	; 0x35c <vfprintf+0xe6>
 33a:	ea e0       	ldi	r30, 0x0A	; 10
 33c:	2e 9e       	mul	r2, r30
 33e:	20 0d       	add	r18, r0
 340:	11 24       	eor	r1, r1
 342:	22 2e       	mov	r2, r18
 344:	f3 2d       	mov	r31, r3
 346:	f0 62       	ori	r31, 0x20	; 32
 348:	3f 2e       	mov	r3, r31
 34a:	08 c0       	rjmp	.+16     	; 0x35c <vfprintf+0xe6>
 34c:	8c 36       	cpi	r24, 0x6C	; 108
 34e:	21 f4       	brne	.+8      	; 0x358 <vfprintf+0xe2>
 350:	83 2d       	mov	r24, r3
 352:	80 68       	ori	r24, 0x80	; 128
 354:	38 2e       	mov	r3, r24
 356:	02 c0       	rjmp	.+4      	; 0x35c <vfprintf+0xe6>
 358:	88 36       	cpi	r24, 0x68	; 104
 35a:	41 f4       	brne	.+16     	; 0x36c <vfprintf+0xf6>
 35c:	f7 01       	movw	r30, r14
 35e:	93 fd       	sbrc	r25, 3
 360:	85 91       	lpm	r24, Z+
 362:	93 ff       	sbrs	r25, 3
 364:	81 91       	ld	r24, Z+
 366:	7f 01       	movw	r14, r30
 368:	81 11       	cpse	r24, r1
 36a:	b3 cf       	rjmp	.-154    	; 0x2d2 <vfprintf+0x5c>
 36c:	98 2f       	mov	r25, r24
 36e:	9f 7d       	andi	r25, 0xDF	; 223
 370:	95 54       	subi	r25, 0x45	; 69
 372:	93 30       	cpi	r25, 0x03	; 3
 374:	28 f4       	brcc	.+10     	; 0x380 <vfprintf+0x10a>
 376:	0c 5f       	subi	r16, 0xFC	; 252
 378:	1f 4f       	sbci	r17, 0xFF	; 255
 37a:	9f e3       	ldi	r25, 0x3F	; 63
 37c:	99 83       	std	Y+1, r25	; 0x01
 37e:	0d c0       	rjmp	.+26     	; 0x39a <vfprintf+0x124>
 380:	83 36       	cpi	r24, 0x63	; 99
 382:	31 f0       	breq	.+12     	; 0x390 <vfprintf+0x11a>
 384:	83 37       	cpi	r24, 0x73	; 115
 386:	71 f0       	breq	.+28     	; 0x3a4 <vfprintf+0x12e>
 388:	83 35       	cpi	r24, 0x53	; 83
 38a:	09 f0       	breq	.+2      	; 0x38e <vfprintf+0x118>
 38c:	59 c0       	rjmp	.+178    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 38e:	21 c0       	rjmp	.+66     	; 0x3d2 <vfprintf+0x15c>
 390:	f8 01       	movw	r30, r16
 392:	80 81       	ld	r24, Z
 394:	89 83       	std	Y+1, r24	; 0x01
 396:	0e 5f       	subi	r16, 0xFE	; 254
 398:	1f 4f       	sbci	r17, 0xFF	; 255
 39a:	88 24       	eor	r8, r8
 39c:	83 94       	inc	r8
 39e:	91 2c       	mov	r9, r1
 3a0:	53 01       	movw	r10, r6
 3a2:	13 c0       	rjmp	.+38     	; 0x3ca <vfprintf+0x154>
 3a4:	28 01       	movw	r4, r16
 3a6:	f2 e0       	ldi	r31, 0x02	; 2
 3a8:	4f 0e       	add	r4, r31
 3aa:	51 1c       	adc	r5, r1
 3ac:	f8 01       	movw	r30, r16
 3ae:	a0 80       	ld	r10, Z
 3b0:	b1 80       	ldd	r11, Z+1	; 0x01
 3b2:	36 fe       	sbrs	r3, 6
 3b4:	03 c0       	rjmp	.+6      	; 0x3bc <vfprintf+0x146>
 3b6:	69 2d       	mov	r22, r9
 3b8:	70 e0       	ldi	r23, 0x00	; 0
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <vfprintf+0x14a>
 3bc:	6f ef       	ldi	r22, 0xFF	; 255
 3be:	7f ef       	ldi	r23, 0xFF	; 255
 3c0:	c5 01       	movw	r24, r10
 3c2:	0e 94 27 03 	call	0x64e	; 0x64e <strnlen>
 3c6:	4c 01       	movw	r8, r24
 3c8:	82 01       	movw	r16, r4
 3ca:	f3 2d       	mov	r31, r3
 3cc:	ff 77       	andi	r31, 0x7F	; 127
 3ce:	3f 2e       	mov	r3, r31
 3d0:	16 c0       	rjmp	.+44     	; 0x3fe <vfprintf+0x188>
 3d2:	28 01       	movw	r4, r16
 3d4:	22 e0       	ldi	r18, 0x02	; 2
 3d6:	42 0e       	add	r4, r18
 3d8:	51 1c       	adc	r5, r1
 3da:	f8 01       	movw	r30, r16
 3dc:	a0 80       	ld	r10, Z
 3de:	b1 80       	ldd	r11, Z+1	; 0x01
 3e0:	36 fe       	sbrs	r3, 6
 3e2:	03 c0       	rjmp	.+6      	; 0x3ea <vfprintf+0x174>
 3e4:	69 2d       	mov	r22, r9
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <vfprintf+0x178>
 3ea:	6f ef       	ldi	r22, 0xFF	; 255
 3ec:	7f ef       	ldi	r23, 0xFF	; 255
 3ee:	c5 01       	movw	r24, r10
 3f0:	0e 94 1c 03 	call	0x638	; 0x638 <strnlen_P>
 3f4:	4c 01       	movw	r8, r24
 3f6:	f3 2d       	mov	r31, r3
 3f8:	f0 68       	ori	r31, 0x80	; 128
 3fa:	3f 2e       	mov	r3, r31
 3fc:	82 01       	movw	r16, r4
 3fe:	33 fc       	sbrc	r3, 3
 400:	1b c0       	rjmp	.+54     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 402:	82 2d       	mov	r24, r2
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	88 16       	cp	r8, r24
 408:	99 06       	cpc	r9, r25
 40a:	b0 f4       	brcc	.+44     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 40c:	b6 01       	movw	r22, r12
 40e:	80 e2       	ldi	r24, 0x20	; 32
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 416:	2a 94       	dec	r2
 418:	f4 cf       	rjmp	.-24     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 41a:	f5 01       	movw	r30, r10
 41c:	37 fc       	sbrc	r3, 7
 41e:	85 91       	lpm	r24, Z+
 420:	37 fe       	sbrs	r3, 7
 422:	81 91       	ld	r24, Z+
 424:	5f 01       	movw	r10, r30
 426:	b6 01       	movw	r22, r12
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 42e:	21 10       	cpse	r2, r1
 430:	2a 94       	dec	r2
 432:	21 e0       	ldi	r18, 0x01	; 1
 434:	82 1a       	sub	r8, r18
 436:	91 08       	sbc	r9, r1
 438:	81 14       	cp	r8, r1
 43a:	91 04       	cpc	r9, r1
 43c:	71 f7       	brne	.-36     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 43e:	e8 c0       	rjmp	.+464    	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 440:	84 36       	cpi	r24, 0x64	; 100
 442:	11 f0       	breq	.+4      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 444:	89 36       	cpi	r24, 0x69	; 105
 446:	41 f5       	brne	.+80     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
 448:	f8 01       	movw	r30, r16
 44a:	37 fe       	sbrs	r3, 7
 44c:	07 c0       	rjmp	.+14     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 44e:	60 81       	ld	r22, Z
 450:	71 81       	ldd	r23, Z+1	; 0x01
 452:	82 81       	ldd	r24, Z+2	; 0x02
 454:	93 81       	ldd	r25, Z+3	; 0x03
 456:	0c 5f       	subi	r16, 0xFC	; 252
 458:	1f 4f       	sbci	r17, 0xFF	; 255
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 45c:	60 81       	ld	r22, Z
 45e:	71 81       	ldd	r23, Z+1	; 0x01
 460:	07 2e       	mov	r0, r23
 462:	00 0c       	add	r0, r0
 464:	88 0b       	sbc	r24, r24
 466:	99 0b       	sbc	r25, r25
 468:	0e 5f       	subi	r16, 0xFE	; 254
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	f3 2d       	mov	r31, r3
 46e:	ff 76       	andi	r31, 0x6F	; 111
 470:	3f 2e       	mov	r3, r31
 472:	97 ff       	sbrs	r25, 7
 474:	09 c0       	rjmp	.+18     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 476:	90 95       	com	r25
 478:	80 95       	com	r24
 47a:	70 95       	com	r23
 47c:	61 95       	neg	r22
 47e:	7f 4f       	sbci	r23, 0xFF	; 255
 480:	8f 4f       	sbci	r24, 0xFF	; 255
 482:	9f 4f       	sbci	r25, 0xFF	; 255
 484:	f0 68       	ori	r31, 0x80	; 128
 486:	3f 2e       	mov	r3, r31
 488:	2a e0       	ldi	r18, 0x0A	; 10
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	a3 01       	movw	r20, r6
 48e:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__ultoa_invert>
 492:	88 2e       	mov	r8, r24
 494:	86 18       	sub	r8, r6
 496:	45 c0       	rjmp	.+138    	; 0x522 <__EEPROM_REGION_LENGTH__+0x122>
 498:	85 37       	cpi	r24, 0x75	; 117
 49a:	31 f4       	brne	.+12     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
 49c:	23 2d       	mov	r18, r3
 49e:	2f 7e       	andi	r18, 0xEF	; 239
 4a0:	b2 2e       	mov	r11, r18
 4a2:	2a e0       	ldi	r18, 0x0A	; 10
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	25 c0       	rjmp	.+74     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4a8:	93 2d       	mov	r25, r3
 4aa:	99 7f       	andi	r25, 0xF9	; 249
 4ac:	b9 2e       	mov	r11, r25
 4ae:	8f 36       	cpi	r24, 0x6F	; 111
 4b0:	c1 f0       	breq	.+48     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4b2:	18 f4       	brcc	.+6      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4b4:	88 35       	cpi	r24, 0x58	; 88
 4b6:	79 f0       	breq	.+30     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4b8:	b5 c0       	rjmp	.+362    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 4ba:	80 37       	cpi	r24, 0x70	; 112
 4bc:	19 f0       	breq	.+6      	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 4be:	88 37       	cpi	r24, 0x78	; 120
 4c0:	21 f0       	breq	.+8      	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4c2:	b0 c0       	rjmp	.+352    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
 4c4:	e9 2f       	mov	r30, r25
 4c6:	e0 61       	ori	r30, 0x10	; 16
 4c8:	be 2e       	mov	r11, r30
 4ca:	b4 fe       	sbrs	r11, 4
 4cc:	0d c0       	rjmp	.+26     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4ce:	fb 2d       	mov	r31, r11
 4d0:	f4 60       	ori	r31, 0x04	; 4
 4d2:	bf 2e       	mov	r11, r31
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4d6:	34 fe       	sbrs	r3, 4
 4d8:	0a c0       	rjmp	.+20     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4da:	29 2f       	mov	r18, r25
 4dc:	26 60       	ori	r18, 0x06	; 6
 4de:	b2 2e       	mov	r11, r18
 4e0:	06 c0       	rjmp	.+12     	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4e2:	28 e0       	ldi	r18, 0x08	; 8
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4e8:	20 e1       	ldi	r18, 0x10	; 16
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
 4ee:	20 e1       	ldi	r18, 0x10	; 16
 4f0:	32 e0       	ldi	r19, 0x02	; 2
 4f2:	f8 01       	movw	r30, r16
 4f4:	b7 fe       	sbrs	r11, 7
 4f6:	07 c0       	rjmp	.+14     	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 4f8:	60 81       	ld	r22, Z
 4fa:	71 81       	ldd	r23, Z+1	; 0x01
 4fc:	82 81       	ldd	r24, Z+2	; 0x02
 4fe:	93 81       	ldd	r25, Z+3	; 0x03
 500:	0c 5f       	subi	r16, 0xFC	; 252
 502:	1f 4f       	sbci	r17, 0xFF	; 255
 504:	06 c0       	rjmp	.+12     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 506:	60 81       	ld	r22, Z
 508:	71 81       	ldd	r23, Z+1	; 0x01
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	0e 5f       	subi	r16, 0xFE	; 254
 510:	1f 4f       	sbci	r17, 0xFF	; 255
 512:	a3 01       	movw	r20, r6
 514:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__ultoa_invert>
 518:	88 2e       	mov	r8, r24
 51a:	86 18       	sub	r8, r6
 51c:	fb 2d       	mov	r31, r11
 51e:	ff 77       	andi	r31, 0x7F	; 127
 520:	3f 2e       	mov	r3, r31
 522:	36 fe       	sbrs	r3, 6
 524:	0d c0       	rjmp	.+26     	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
 526:	23 2d       	mov	r18, r3
 528:	2e 7f       	andi	r18, 0xFE	; 254
 52a:	a2 2e       	mov	r10, r18
 52c:	89 14       	cp	r8, r9
 52e:	58 f4       	brcc	.+22     	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 530:	34 fe       	sbrs	r3, 4
 532:	0b c0       	rjmp	.+22     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 534:	32 fc       	sbrc	r3, 2
 536:	09 c0       	rjmp	.+18     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 538:	83 2d       	mov	r24, r3
 53a:	8e 7e       	andi	r24, 0xEE	; 238
 53c:	a8 2e       	mov	r10, r24
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 540:	b8 2c       	mov	r11, r8
 542:	a3 2c       	mov	r10, r3
 544:	03 c0       	rjmp	.+6      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 546:	b8 2c       	mov	r11, r8
 548:	01 c0       	rjmp	.+2      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 54a:	b9 2c       	mov	r11, r9
 54c:	a4 fe       	sbrs	r10, 4
 54e:	0f c0       	rjmp	.+30     	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
 550:	fe 01       	movw	r30, r28
 552:	e8 0d       	add	r30, r8
 554:	f1 1d       	adc	r31, r1
 556:	80 81       	ld	r24, Z
 558:	80 33       	cpi	r24, 0x30	; 48
 55a:	21 f4       	brne	.+8      	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 55c:	9a 2d       	mov	r25, r10
 55e:	99 7e       	andi	r25, 0xE9	; 233
 560:	a9 2e       	mov	r10, r25
 562:	09 c0       	rjmp	.+18     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 564:	a2 fe       	sbrs	r10, 2
 566:	06 c0       	rjmp	.+12     	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
 568:	b3 94       	inc	r11
 56a:	b3 94       	inc	r11
 56c:	04 c0       	rjmp	.+8      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 56e:	8a 2d       	mov	r24, r10
 570:	86 78       	andi	r24, 0x86	; 134
 572:	09 f0       	breq	.+2      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 574:	b3 94       	inc	r11
 576:	a3 fc       	sbrc	r10, 3
 578:	11 c0       	rjmp	.+34     	; 0x59c <__EEPROM_REGION_LENGTH__+0x19c>
 57a:	a0 fe       	sbrs	r10, 0
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 57e:	b2 14       	cp	r11, r2
 580:	88 f4       	brcc	.+34     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 582:	28 0c       	add	r2, r8
 584:	92 2c       	mov	r9, r2
 586:	9b 18       	sub	r9, r11
 588:	0e c0       	rjmp	.+28     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 58a:	b2 14       	cp	r11, r2
 58c:	60 f4       	brcc	.+24     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 58e:	b6 01       	movw	r22, r12
 590:	80 e2       	ldi	r24, 0x20	; 32
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 598:	b3 94       	inc	r11
 59a:	f7 cf       	rjmp	.-18     	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
 59c:	b2 14       	cp	r11, r2
 59e:	18 f4       	brcc	.+6      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
 5a0:	2b 18       	sub	r2, r11
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 5a4:	98 2c       	mov	r9, r8
 5a6:	21 2c       	mov	r2, r1
 5a8:	a4 fe       	sbrs	r10, 4
 5aa:	10 c0       	rjmp	.+32     	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
 5ac:	b6 01       	movw	r22, r12
 5ae:	80 e3       	ldi	r24, 0x30	; 48
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 5b6:	a2 fe       	sbrs	r10, 2
 5b8:	17 c0       	rjmp	.+46     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5ba:	a1 fc       	sbrc	r10, 1
 5bc:	03 c0       	rjmp	.+6      	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
 5be:	88 e7       	ldi	r24, 0x78	; 120
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5c4:	88 e5       	ldi	r24, 0x58	; 88
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	b6 01       	movw	r22, r12
 5ca:	0c c0       	rjmp	.+24     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5cc:	8a 2d       	mov	r24, r10
 5ce:	86 78       	andi	r24, 0x86	; 134
 5d0:	59 f0       	breq	.+22     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5d2:	a1 fe       	sbrs	r10, 1
 5d4:	02 c0       	rjmp	.+4      	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5d6:	8b e2       	ldi	r24, 0x2B	; 43
 5d8:	01 c0       	rjmp	.+2      	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
 5da:	80 e2       	ldi	r24, 0x20	; 32
 5dc:	a7 fc       	sbrc	r10, 7
 5de:	8d e2       	ldi	r24, 0x2D	; 45
 5e0:	b6 01       	movw	r22, r12
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 5e8:	89 14       	cp	r8, r9
 5ea:	38 f4       	brcc	.+14     	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 5ec:	b6 01       	movw	r22, r12
 5ee:	80 e3       	ldi	r24, 0x30	; 48
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 5f6:	9a 94       	dec	r9
 5f8:	f7 cf       	rjmp	.-18     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 5fa:	8a 94       	dec	r8
 5fc:	f3 01       	movw	r30, r6
 5fe:	e8 0d       	add	r30, r8
 600:	f1 1d       	adc	r31, r1
 602:	80 81       	ld	r24, Z
 604:	b6 01       	movw	r22, r12
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 60c:	81 10       	cpse	r8, r1
 60e:	f5 cf       	rjmp	.-22     	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 610:	22 20       	and	r2, r2
 612:	09 f4       	brne	.+2      	; 0x616 <__EEPROM_REGION_LENGTH__+0x216>
 614:	42 ce       	rjmp	.-892    	; 0x29a <vfprintf+0x24>
 616:	b6 01       	movw	r22, r12
 618:	80 e2       	ldi	r24, 0x20	; 32
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 32 03 	call	0x664	; 0x664 <fputc>
 620:	2a 94       	dec	r2
 622:	f6 cf       	rjmp	.-20     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
 624:	f6 01       	movw	r30, r12
 626:	86 81       	ldd	r24, Z+6	; 0x06
 628:	97 81       	ldd	r25, Z+7	; 0x07
 62a:	02 c0       	rjmp	.+4      	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	2b 96       	adiw	r28, 0x0b	; 11
 632:	e2 e1       	ldi	r30, 0x12	; 18
 634:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__epilogue_restores__>

00000638 <strnlen_P>:
 638:	fc 01       	movw	r30, r24
 63a:	05 90       	lpm	r0, Z+
 63c:	61 50       	subi	r22, 0x01	; 1
 63e:	70 40       	sbci	r23, 0x00	; 0
 640:	01 10       	cpse	r0, r1
 642:	d8 f7       	brcc	.-10     	; 0x63a <strnlen_P+0x2>
 644:	80 95       	com	r24
 646:	90 95       	com	r25
 648:	8e 0f       	add	r24, r30
 64a:	9f 1f       	adc	r25, r31
 64c:	08 95       	ret

0000064e <strnlen>:
 64e:	fc 01       	movw	r30, r24
 650:	61 50       	subi	r22, 0x01	; 1
 652:	70 40       	sbci	r23, 0x00	; 0
 654:	01 90       	ld	r0, Z+
 656:	01 10       	cpse	r0, r1
 658:	d8 f7       	brcc	.-10     	; 0x650 <strnlen+0x2>
 65a:	80 95       	com	r24
 65c:	90 95       	com	r25
 65e:	8e 0f       	add	r24, r30
 660:	9f 1f       	adc	r25, r31
 662:	08 95       	ret

00000664 <fputc>:
 664:	0f 93       	push	r16
 666:	1f 93       	push	r17
 668:	cf 93       	push	r28
 66a:	df 93       	push	r29
 66c:	fb 01       	movw	r30, r22
 66e:	23 81       	ldd	r18, Z+3	; 0x03
 670:	21 fd       	sbrc	r18, 1
 672:	03 c0       	rjmp	.+6      	; 0x67a <fputc+0x16>
 674:	8f ef       	ldi	r24, 0xFF	; 255
 676:	9f ef       	ldi	r25, 0xFF	; 255
 678:	2c c0       	rjmp	.+88     	; 0x6d2 <fputc+0x6e>
 67a:	22 ff       	sbrs	r18, 2
 67c:	16 c0       	rjmp	.+44     	; 0x6aa <fputc+0x46>
 67e:	46 81       	ldd	r20, Z+6	; 0x06
 680:	57 81       	ldd	r21, Z+7	; 0x07
 682:	24 81       	ldd	r18, Z+4	; 0x04
 684:	35 81       	ldd	r19, Z+5	; 0x05
 686:	42 17       	cp	r20, r18
 688:	53 07       	cpc	r21, r19
 68a:	44 f4       	brge	.+16     	; 0x69c <fputc+0x38>
 68c:	a0 81       	ld	r26, Z
 68e:	b1 81       	ldd	r27, Z+1	; 0x01
 690:	9d 01       	movw	r18, r26
 692:	2f 5f       	subi	r18, 0xFF	; 255
 694:	3f 4f       	sbci	r19, 0xFF	; 255
 696:	31 83       	std	Z+1, r19	; 0x01
 698:	20 83       	st	Z, r18
 69a:	8c 93       	st	X, r24
 69c:	26 81       	ldd	r18, Z+6	; 0x06
 69e:	37 81       	ldd	r19, Z+7	; 0x07
 6a0:	2f 5f       	subi	r18, 0xFF	; 255
 6a2:	3f 4f       	sbci	r19, 0xFF	; 255
 6a4:	37 83       	std	Z+7, r19	; 0x07
 6a6:	26 83       	std	Z+6, r18	; 0x06
 6a8:	14 c0       	rjmp	.+40     	; 0x6d2 <fputc+0x6e>
 6aa:	8b 01       	movw	r16, r22
 6ac:	ec 01       	movw	r28, r24
 6ae:	fb 01       	movw	r30, r22
 6b0:	00 84       	ldd	r0, Z+8	; 0x08
 6b2:	f1 85       	ldd	r31, Z+9	; 0x09
 6b4:	e0 2d       	mov	r30, r0
 6b6:	09 95       	icall
 6b8:	89 2b       	or	r24, r25
 6ba:	e1 f6       	brne	.-72     	; 0x674 <fputc+0x10>
 6bc:	d8 01       	movw	r26, r16
 6be:	16 96       	adiw	r26, 0x06	; 6
 6c0:	8d 91       	ld	r24, X+
 6c2:	9c 91       	ld	r25, X
 6c4:	17 97       	sbiw	r26, 0x07	; 7
 6c6:	01 96       	adiw	r24, 0x01	; 1
 6c8:	17 96       	adiw	r26, 0x07	; 7
 6ca:	9c 93       	st	X, r25
 6cc:	8e 93       	st	-X, r24
 6ce:	16 97       	sbiw	r26, 0x06	; 6
 6d0:	ce 01       	movw	r24, r28
 6d2:	df 91       	pop	r29
 6d4:	cf 91       	pop	r28
 6d6:	1f 91       	pop	r17
 6d8:	0f 91       	pop	r16
 6da:	08 95       	ret

000006dc <__ultoa_invert>:
 6dc:	fa 01       	movw	r30, r20
 6de:	aa 27       	eor	r26, r26
 6e0:	28 30       	cpi	r18, 0x08	; 8
 6e2:	51 f1       	breq	.+84     	; 0x738 <__ultoa_invert+0x5c>
 6e4:	20 31       	cpi	r18, 0x10	; 16
 6e6:	81 f1       	breq	.+96     	; 0x748 <__ultoa_invert+0x6c>
 6e8:	e8 94       	clt
 6ea:	6f 93       	push	r22
 6ec:	6e 7f       	andi	r22, 0xFE	; 254
 6ee:	6e 5f       	subi	r22, 0xFE	; 254
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	af 4f       	sbci	r26, 0xFF	; 255
 6f8:	b1 e0       	ldi	r27, 0x01	; 1
 6fa:	3e d0       	rcall	.+124    	; 0x778 <__ultoa_invert+0x9c>
 6fc:	b4 e0       	ldi	r27, 0x04	; 4
 6fe:	3c d0       	rcall	.+120    	; 0x778 <__ultoa_invert+0x9c>
 700:	67 0f       	add	r22, r23
 702:	78 1f       	adc	r23, r24
 704:	89 1f       	adc	r24, r25
 706:	9a 1f       	adc	r25, r26
 708:	a1 1d       	adc	r26, r1
 70a:	68 0f       	add	r22, r24
 70c:	79 1f       	adc	r23, r25
 70e:	8a 1f       	adc	r24, r26
 710:	91 1d       	adc	r25, r1
 712:	a1 1d       	adc	r26, r1
 714:	6a 0f       	add	r22, r26
 716:	71 1d       	adc	r23, r1
 718:	81 1d       	adc	r24, r1
 71a:	91 1d       	adc	r25, r1
 71c:	a1 1d       	adc	r26, r1
 71e:	20 d0       	rcall	.+64     	; 0x760 <__ultoa_invert+0x84>
 720:	09 f4       	brne	.+2      	; 0x724 <__ultoa_invert+0x48>
 722:	68 94       	set
 724:	3f 91       	pop	r19
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	26 9f       	mul	r18, r22
 72a:	11 24       	eor	r1, r1
 72c:	30 19       	sub	r19, r0
 72e:	30 5d       	subi	r19, 0xD0	; 208
 730:	31 93       	st	Z+, r19
 732:	de f6       	brtc	.-74     	; 0x6ea <__ultoa_invert+0xe>
 734:	cf 01       	movw	r24, r30
 736:	08 95       	ret
 738:	46 2f       	mov	r20, r22
 73a:	47 70       	andi	r20, 0x07	; 7
 73c:	40 5d       	subi	r20, 0xD0	; 208
 73e:	41 93       	st	Z+, r20
 740:	b3 e0       	ldi	r27, 0x03	; 3
 742:	0f d0       	rcall	.+30     	; 0x762 <__ultoa_invert+0x86>
 744:	c9 f7       	brne	.-14     	; 0x738 <__ultoa_invert+0x5c>
 746:	f6 cf       	rjmp	.-20     	; 0x734 <__ultoa_invert+0x58>
 748:	46 2f       	mov	r20, r22
 74a:	4f 70       	andi	r20, 0x0F	; 15
 74c:	40 5d       	subi	r20, 0xD0	; 208
 74e:	4a 33       	cpi	r20, 0x3A	; 58
 750:	18 f0       	brcs	.+6      	; 0x758 <__ultoa_invert+0x7c>
 752:	49 5d       	subi	r20, 0xD9	; 217
 754:	31 fd       	sbrc	r19, 1
 756:	40 52       	subi	r20, 0x20	; 32
 758:	41 93       	st	Z+, r20
 75a:	02 d0       	rcall	.+4      	; 0x760 <__ultoa_invert+0x84>
 75c:	a9 f7       	brne	.-22     	; 0x748 <__ultoa_invert+0x6c>
 75e:	ea cf       	rjmp	.-44     	; 0x734 <__ultoa_invert+0x58>
 760:	b4 e0       	ldi	r27, 0x04	; 4
 762:	a6 95       	lsr	r26
 764:	97 95       	ror	r25
 766:	87 95       	ror	r24
 768:	77 95       	ror	r23
 76a:	67 95       	ror	r22
 76c:	ba 95       	dec	r27
 76e:	c9 f7       	brne	.-14     	; 0x762 <__ultoa_invert+0x86>
 770:	00 97       	sbiw	r24, 0x00	; 0
 772:	61 05       	cpc	r22, r1
 774:	71 05       	cpc	r23, r1
 776:	08 95       	ret
 778:	9b 01       	movw	r18, r22
 77a:	ac 01       	movw	r20, r24
 77c:	0a 2e       	mov	r0, r26
 77e:	06 94       	lsr	r0
 780:	57 95       	ror	r21
 782:	47 95       	ror	r20
 784:	37 95       	ror	r19
 786:	27 95       	ror	r18
 788:	ba 95       	dec	r27
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0xa2>
 78c:	62 0f       	add	r22, r18
 78e:	73 1f       	adc	r23, r19
 790:	84 1f       	adc	r24, r20
 792:	95 1f       	adc	r25, r21
 794:	a0 1d       	adc	r26, r0
 796:	08 95       	ret

00000798 <__prologue_saves__>:
 798:	2f 92       	push	r2
 79a:	3f 92       	push	r3
 79c:	4f 92       	push	r4
 79e:	5f 92       	push	r5
 7a0:	6f 92       	push	r6
 7a2:	7f 92       	push	r7
 7a4:	8f 92       	push	r8
 7a6:	9f 92       	push	r9
 7a8:	af 92       	push	r10
 7aa:	bf 92       	push	r11
 7ac:	cf 92       	push	r12
 7ae:	df 92       	push	r13
 7b0:	ef 92       	push	r14
 7b2:	ff 92       	push	r15
 7b4:	0f 93       	push	r16
 7b6:	1f 93       	push	r17
 7b8:	cf 93       	push	r28
 7ba:	df 93       	push	r29
 7bc:	cd b7       	in	r28, 0x3d	; 61
 7be:	de b7       	in	r29, 0x3e	; 62
 7c0:	ca 1b       	sub	r28, r26
 7c2:	db 0b       	sbc	r29, r27
 7c4:	0f b6       	in	r0, 0x3f	; 63
 7c6:	f8 94       	cli
 7c8:	de bf       	out	0x3e, r29	; 62
 7ca:	0f be       	out	0x3f, r0	; 63
 7cc:	cd bf       	out	0x3d, r28	; 61
 7ce:	09 94       	ijmp

000007d0 <__epilogue_restores__>:
 7d0:	2a 88       	ldd	r2, Y+18	; 0x12
 7d2:	39 88       	ldd	r3, Y+17	; 0x11
 7d4:	48 88       	ldd	r4, Y+16	; 0x10
 7d6:	5f 84       	ldd	r5, Y+15	; 0x0f
 7d8:	6e 84       	ldd	r6, Y+14	; 0x0e
 7da:	7d 84       	ldd	r7, Y+13	; 0x0d
 7dc:	8c 84       	ldd	r8, Y+12	; 0x0c
 7de:	9b 84       	ldd	r9, Y+11	; 0x0b
 7e0:	aa 84       	ldd	r10, Y+10	; 0x0a
 7e2:	b9 84       	ldd	r11, Y+9	; 0x09
 7e4:	c8 84       	ldd	r12, Y+8	; 0x08
 7e6:	df 80       	ldd	r13, Y+7	; 0x07
 7e8:	ee 80       	ldd	r14, Y+6	; 0x06
 7ea:	fd 80       	ldd	r15, Y+5	; 0x05
 7ec:	0c 81       	ldd	r16, Y+4	; 0x04
 7ee:	1b 81       	ldd	r17, Y+3	; 0x03
 7f0:	aa 81       	ldd	r26, Y+2	; 0x02
 7f2:	b9 81       	ldd	r27, Y+1	; 0x01
 7f4:	ce 0f       	add	r28, r30
 7f6:	d1 1d       	adc	r29, r1
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	f8 94       	cli
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	0f be       	out	0x3f, r0	; 63
 800:	cd bf       	out	0x3d, r28	; 61
 802:	ed 01       	movw	r28, r26
 804:	08 95       	ret

00000806 <_exit>:
 806:	f8 94       	cli

00000808 <__stop_program>:
 808:	ff cf       	rjmp	.-2      	; 0x808 <__stop_program>
